from os import environ
from os.path import exists as path_exists

if environ.get('HOME', '') and path_exists(environ['HOME'] + '/botik/'):
    token = '5339782696:AAGnLcYkaWMgB4cbJ13IJBZF4V_XXXXXXXX'
else:
    token = '5334532377:AAGbC351huZGco8npJVMVYcdpibXXXXXXXX'
proxy = 'socks5://Proxy_User:Proxy_Password@Proxy_IP:Proxy_Port'

intros = ['Есть ли у вас',
          'Испытываете ли вы',
          'Имеется ли у вас такая привычка',
          'Присутствует ли у вас',
          'Считаете ли вы, что у вас']

quest = \
    (('Недостаток энергии, упадок сил', (1, 0, 1, 1, 1, 0, 0, 1, 0), 1),
    ('Частые заболевания', (0, 0, 0, 0, 1, 0, 0, 0, 0), 1),
    ('Неприятный запах тела и/или изо рта', (1, 1, 0, 0, 0, 1, 1, 0, 0), 0),
    ('Трудности в пищеварении', (1, 0, 0, 0, 1, 0, 0, 0, 0), 1),
    ('Частое употребление мяса с кровью', (0, 1, 1, 0, 0, 1, 0, 0, 0), 2),
    ('Болезненные, нерегулярные менструации', (0, 1, 0, 0, 0, 0, 1, 1, 0), 1),
    ('Частое применение антибиотиков', (0, 1, 0, 0, 1, 0, 0, 0, 0), 2),
    ('Злоупотребление алкоголем', (0, 0, 0, 1, 0, 0, 0, 1, 0), 2),
    ('Частые перепады настроения', (0, 0, 0, 1, 0, 0, 0, 1, 0), 1),
    ('Пищевые аллергии', (1, 0, 0, 0, 1, 1, 0, 0, 0), 0),
    ('Отечность под глазами', (0, 0, 1, 1, 0, 0, 1, 0, 0), 0),
    ('Курение', (0, 0, 1, 1, 0, 0, 0, 0, 0), 2),
    ('Рассеянность, плохая память', (0, 0, 1, 1, 0, 0, 0, 1, 0), 3),
    ('Пониженный иммунитет', (1, 0, 0, 0, 1, 1, 0, 0, 0), 4),
    ('Изжога и газообразование после еды', (1, 0, 0, 0, 1, 1, 0, 0, 0), 0),
    ('Частые стрессы', (0, 0, 1, 1, 1, 1, 0, 1, 0), 1),
    ('Дефекты кожи или плохой цвет лица', (1, 1, 0, 0, 0, 0, 1, 1, 1), 0),
    ('Избыточное употребление углеводов, тяга к сладостям', (0, 0, 0, 1, 0, 0, 0, 1, 0), 3),
    ('Избыточное употребление молочных продуктов', (0, 1, 0, 0, 0, 0, 0, 0, 0), 3),
    ('Подавленность, апатия, депрессия', (0, 1, 0, 1, 0, 0, 0, 0, 0), 3),
    ('Бессонница или беспокойный сон', (0, 0, 0, 1, 0, 0, 0, 1, 0), 3),
    ('Проблемы менопаузы', (0, 0, 0, 1, 0, 0, 0, 1, 1), 1),
    ('Частое мочеиспускание', (0, 0, 0, 0, 0, 0, 1, 0, 0), 1),
    ('Выпадение волос', (0, 0, 1, 1, 0, 0, 0, 1, 1), 0),
    ('Отеки и боли в суставах', (0, 0, 1, 0, 1, 0, 0, 0, 1), 0),
    ('Трудности сохранения нормального веса', (0, 0, 0, 1, 1, 0, 0, 1, 1), 1),
    ('Быстрая утомляемость', (0, 0, 1, 0, 0, 1, 0, 0, 1), 3),
    ('Несоблюдение режима питания', (1, 1, 0, 0, 0, 0, 0, 1, 0), 2),
    ('Медленное выздоровление', (0, 1, 1, 0, 1, 0, 0, 1, 0), 4),
    ('Нерегулярный стул', (1, 1, 0, 1, 0, 0, 0, 0, 0), 4),
    ('Отсутствие аппетита', (1, 0, 0, 1, 0, 0, 0, 1, 0), 1),
    ('Низкая сексуальная активность', (0, 0, 0, 0, 0, 0, 0, 1, 0), 4),
    ('Истонченные и ломкие ногти', (1, 0, 0, 0, 0, 0, 0, 0, 1), 3),
    ('Сухие, тусклые, поврежденные волосы', (1, 0, 0, 0, 0, 0, 1, 0, 0), 0),
    ('Употребление жирной пищи', (1, 1, 1, 0, 0, 0, 0, 0, 0), 2),
    ('Чувство страха, беспокойство', (0, 0, 0, 1, 0, 0, 0, 1, 0), 1),
    ('Недостаток клетчатки в рационе', (0, 1, 1, 0, 0, 0, 0, 0, 0), 4),
    ('Мышечные судороги', (0, 0, 0, 1, 0, 0, 0, 0, 1), 1),
    ('Неблагоприятная экология', (0, 0, 0, 0, 1, 1, 0, 0, 0), 4),
    ('Частое употребление кофе, чая', (0, 0, 0, 1, 0, 0, 0, 1, 1), 2),
    ('Повышенная раздражительность, потеря самоконтроля', (0, 0, 0, 1, 1, 0, 0, 0, 1), 0),
    ('Гиперчувствительность к химикатам, пищевым продуктам', (1, 1, 0, 0, 1, 0, 0, 0, 0), 0),
    ('Грибковые поражения', (1, 1, 0, 0, 1, 0, 0, 0, 0), 0),
    ('Слабость в мышцах, хрупкость костей', (1, 0, 0, 0, 0, 0, 1, 0, 1), 0),
    ('Постоянная тревога', (1, 0, 0, 1, 0, 0, 0, 0, 0), 3),
    ('Раздражительность, чрезмерная возбудимость', (0, 1, 0, 1, 0, 0, 0, 1, 0), 0),
    ('Малоподвижный образ жизни', (0, 1, 0, 1, 0, 0, 0, 1, 1), 4),
    ('Повышенное выделение мокроты', (0, 1, 0, 0, 0, 0, 0, 0, 0), 0))

systems = \
    [['Система переваривания и усвоения пищи', ((0,2),(3,4),(5,9),(10,17)), 0],
    ['Желудочно - кишечный тракт', ((0,2),(3,4),(5,9),(10,17)), 0, 0],
    ['Сердечно-сосудистая система', ((0,1),(2,3),(4,7),(8,12)), 0, 0],
    ['Нервная система', ((0,2),(3,5),(6,10),(11,22)), 0, 0],
    ['Иммунная система', ((0,2),(3,4),(5,7),(8,15)), 0, 0],
    ['Дыхательная система', ((0,0),(1,1),(2,4),(5,8)), 0, 0],
    ['Мочевыводящая система', ((0,0),(1,1),(2,4),(5,7)), 0, 0],
    ['Эндокринная система', ((0,2),(3,5),(6,10),(11,20)), 0, 0],
    ['Опорно - двигательная система', ((0,1),(2,3),(4,7),(8,12)), 0, 0]]

marks = ('Неудовлетворительно', 'Удовлетворительно', 'Хорошо', 'Очень хорошо')

def test(answers):
    res = []
    for system_no in range(len(systems)):
        for interval_no in range(4):
            interval = systems[system_no][1][interval_no]
            if interval[0] <= answers[system_no] <= interval[1]:
                # systems[system_no][2] = interval_no
                res.append(interval_no)
                break
        else:
            res.append('not_foundik')
    return res
    # print(answers)
    # print(res)
